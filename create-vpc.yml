Description: > 
    This template deploys a VPC, with a pair of public and private subnets spread 
    across two Availabilty Zones. It deploys an Internet Gateway, with a default 
    route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), 
    and default routes for them in the private subnets.

Parameters:
    EnvironmentName:
      Description: An environment name that will be prefixed to resource names
      Type: String

    VpcCIDR: 
      Description: Please enter the IP range (CIDR notation) for this VPC
      Type: String
      Default: 10.0.0.0/16

    PublicSubnet1CIDR:
      Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
      Type: String
      Default: 10.0.0.0/24

    PublicSubnet2CIDR:
      Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
      Type: String
      Default: 10.0.1.0/24

    PrivateSubnet1CIDR:
      Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
      Type: String
      Default: 10.0.2.0/24

    PrivateSubnet2CIDR:
      Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
      Type: String
      Default: 10.0.3.0/24

Resources:
    # define VPC configuration
    HaiLT23VPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: !Ref VpcCIDR
        EnableDnsSupport: true
        Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName} VPC
    
    # Define Internet Gateway
    InternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
          - Key: Name
            Value: !Sub  ${EnvironmentName} IGW
    AttachGateway:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        VpcId: !Ref HaiLT23VPC
        InternetGatewayId: !Ref InternetGateway
    
    # define subnet in AZ1
    PublicSubnet1:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: !Select 
            - '0'
            - !GetAZs ''
        VpcId: !Ref HaiLT23VPC
        CidrBlock: !Ref PublicSubnet1CIDR
        Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName} Public Subnet AZ1
    
    PrivateSubnet1:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: !Select 
            - '0'
            - !GetAZs ''
        VpcId: !Ref HaiLT23VPC
        CidrBlock: !Ref PrivateSubnet1CIDR
        Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName} Private Subnet AZ1
    
    # Define subnet in AZ2
    PublicSubnet2:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: !Select
            - '1'
            - !GetAZs ''
        VpcId: !Ref HaiLT23VPC
        CidrBlock: !Ref PublicSubnet2CIDR
        Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName} Public Subnet AZ2
    
    PrivateSubnet2:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: !Select
            - '1'
            - !GetAZs ''
        VpcId: !Ref HaiLT23VPC
        CidrBlock: !Ref PrivateSubnet2CIDR
        Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName} Private Subnet AZ2
    
    # define Elastic IP
    NatGatewayEIP1:
      Type: AWS::EC2::EIP
      DependsOn: AttachGateway
      Properties:
        Domain: vpc

    NatGatewayEIP2:
      Type: AWS::EC2::EIP
      DependsOn: AttachGateway
      Properties:
        Domain: vpc
    
    NatGateway1: 
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: !GetAtt NatGatewayEIP1.AllocationId
            SubnetId: !Ref PublicSubnet1

    NatGateway2: 
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatGatewayEIP2.AllocationId
            SubnetId: !Ref PublicSubnet2
    
    # Define public route table
    PublicRouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref HaiLT23VPC
        Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName} Public Route Table
    PublicRoute:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway
    # Define association for subnet
    PublicSubnet1RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: !Ref PublicSubnet1
        RouteTableId: !Ref PublicRouteTable
    PublicSubnet2RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: !Ref PublicSubnet2
        RouteTableId: !Ref PublicRouteTable
    
    # Define private route table
    PrivateRouteTable1:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref HaiLT23VPC
        Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName} Private Route Table 1
    PrivateRoute1:
      Type: AWS::EC2::Route
      DependsOn: NatGateway1
      Properties:
        RouteTableId: !Ref PrivateRouteTable1
        DestinationCidrBlock: 0.0.0.0/0
        NatGatewayId: !Ref NatGateway1
    PrivateRouteTable1Association:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: !Ref PrivateSubnet1
        RouteTableId: !Ref PrivateRouteTable1
    PrivateRouteTable2:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref HaiLT23VPC
        Tags:
          - Key: Name
            Value: !Sub ${EnvironmentName} Private Route Table 2
    PrivateRoute2:
      Type: AWS::EC2::Route
      DependsOn: NatGateway2
      Properties:
        RouteTableId: !Ref PrivateRouteTable2
        DestinationCidrBlock: 0.0.0.0/0
        NatGatewayId: !Ref NatGateway2
    PrivateRouteTable2Association:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: !Ref PrivateSubnet2
        RouteTableId: !Ref PrivateRouteTable2

# Define output
Outputs: 
  # VPC
  VPC:
    Description: VPC
    Value: !Ref HaiLT23VPC
    Export: 
      Name: !Sub ${EnvironmentName}-VPCID
  
  # Public subnet
  PublicSubnet1:
    Description: PublicSubnet1
    Value: !Ref PublicSubnet1
    Export: 
      Name: !Sub ${EnvironmentName}-PUB-SN-1
  PublicSubnet2:
    Description: PublicSubnet2
    Value: !Ref PublicSubnet2
    Export: 
      Name: !Sub ${EnvironmentName}-PUB-SN-2
  
  # Private subnet
  PrivateSubnet1:
    Description: PrivateSubnet1
    Value: !Ref PrivateSubnet1
    Export: 
      Name: !Sub  ${EnvironmentName}-PRIV-SN-1
  PrivateSubnet2:
    Description: PrivateSubnet2
    Value: !Ref PrivateSubnet2
    Export: 
      Name: !Sub ${EnvironmentName}-PRIV-SN-2
  
  # List Public subnet
  PublicSubnents:
    Description: List Public subnet
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export: 
      Name: !Sub ${EnvironmentName}-PUBS-SN
  
  # List Private Subnet
  PrivateSubnets:
    Description: List Private Subnet
    Value: !Join  [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2]]
    Export: 
      Name: !Sub ${EnvironmentName}-PRIV-SN