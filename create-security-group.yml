Description: >
  This template deploys a security-group for web app and a security group for load balancer

Parameters: 
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
Resources:
  # Web app security group
  WebAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId: 
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: "-1"
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} WebAppSecurityGroup
  # Load balancer security group
  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts only
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} ELBSecurityGroup

Outputs:
  WebAppSecurityGroup:
    Description: Web app security group
    Value: !Ref WebAppSecurityGroup
    Export: 
      Name: !Sub ${EnvironmentName}-WebApp-SG
  
  ELBSecurityGroup:
    Description: Elastic Load Balancer security group
    Value: !Ref ELBSecurityGroup
    Export: 
      Name: !Sub ${EnvironmentName}-ELB-SG